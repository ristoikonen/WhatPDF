
//using PdfReader;
using System.ComponentModel;
using UglyToad.PdfPig.Graphics;


namespace WhatPDF.Web;

internal class PdfContentPlugin
{

    const string PDFPath = @"PDFs/";
    const string PDFFileName = @"VN";

    // The Kernel is automatically injected into the plugin methods if they require it.
    // This allows the plugin to use the kernel's configured AI services.

    /// <summary>
    /// Read PDF chunks and uses the kernel to summarize them.
    /// </summary>
    /// <param name="kernel">The Semantic Kernel instance (injected automatically).</param>
    /// <param name="filePath">The path to the text file to be summarized.</param>
    /// <returns>A summary of the file content generated by the LLM.</returns>

[Description("Reads a text file and generates a summary of its content using an AI model.")]
public List<string> GetChunks(

    [Description("The full path to the text file to summarize.")] string pdfFileName)
    {
        string pdfpath = "";
        List<string>? text_blocks = new List<string>(); 
        try
        {
            Reader reader = new Reader(PDFPath);
            pdfpath = PDFPath + pdfFileName;
            string filePath = Path.GetFullPath(pdfpath);

            text_blocks = reader.ReadPdfBlocks(pdfpath) ?? text_blocks;
            return text_blocks;
            // json_chunks?[0]

        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error reading file {pdfpath}: {ex.Message}");
            return text_blocks;
        }

        // https://github.com/microsoft/semantic-kernel/blob/main/dotnet/samples/GettingStartedWithTextSearch/InMemoryVectorStoreFixture.cs#L139
    }

}

